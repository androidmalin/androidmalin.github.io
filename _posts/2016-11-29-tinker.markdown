---
layout: post
title:  "Tinker"
date:   2016-11-29 12:55 +0800
categories: Ma Lin update
---

1.DownLoad<br/>
`git clone git@github.com:Tencent/tinker.git`

2.cd sample project<br/>
`cd tinker/tinker-sample-android`

3.DownLoad dependencies<br/>
`gradle clean`

4.build debug apk<br/>
`gradle assembleDebug`

5.install debug base apk<br/>
`adb install app/build/bakApk/*.apk`

6.start debug base apk<br/>
`adb shell am start tinker.sample.android/.app.MainActivity`

7.get base debug apk fileName<br/>
`ls app/build/bakApk/ | awk '{print $0}'`

8.change some codes and change the config of build.gradle<br/>

`change some codes for fix bug`

`cat app/build.gradle | grep tinkerOldApkPath`

use number 7 apk filename replace the tinkerOldApkPath apk fileName<br/>

`vim app/buid.gradle`


9.build patch apk<br/>
`gradle tinkerPatchDebug`


10.push patch apk into phone<br/>
`adb push app/build/outputs/tinkerPatch/debug/patch_signed_7zip.apk /storage/sdcard0/`

11.click loadPath


12.kill the running apk or restart the running apk<br/>
`adb shell am force-stop tinker.sample.android`

or<br/>

./kill.sh<br/>

the content of kill.sh<br/>
>`PROID=`adb shell ps | grep tinker.sample.android | awk '{print $2}' | head -n 1``<br/>

>`adb shell kill -9 $PROID`

a.`vim kill.sh && chmod 777 ./kill.sh`<br/>
b.input content of kill.sh<br/>
c.then `./kill.sh`

13.start apk<br/>
`adb shell am start tinker.sample.android/.app.MainActivity`

14.click showinfo in order to test patch success or not

15.test patch success or not<br/>
`adb logcat | grep tinker.sample.android`

16.change some codes in order to hot fix from number 9
